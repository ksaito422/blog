[{"content":"GoogleCloudLoadBalancing（以下、GCLB）のurl-mapを指定して、バックエンドバケットにルーティングするときに地味にハマったエラーとその解消法について書きます。\n環境 GoogleCloud # terraformで構築するため一応バージョンのせておく terraform --version v1.3.5 hashicorp/google v4.74.0 結論 GCLBを経由してGCSのオブジェクト参照するときは、オブジェクトのpathとurl-mapで指定するpathは一致させる必要があります。\n解説 今回使用するterraformのコードの一部です。他にもgcsなどのリソースも作ってますが、解説する内容とは関係ないので省略してます。\nデフォルトのルートとは別にpaths = [\u0026quot;/test/*\u0026quot;]でバックエンドバケットにルーティングするように設定されています。\nresource \u0026#34;google_compute_url_map\u0026#34; \u0026#34;default\u0026#34; { name = \u0026#34;${local.project}-${local.prefix}\u0026#34; default_service = google_compute_backend_bucket.backend_bucket.id host_rule { hosts = [\u0026#34;*\u0026#34;] path_matcher = \u0026#34;path-matcher-2\u0026#34; } path_matcher { name = \u0026#34;path-matcher-2\u0026#34; default_service = google_compute_backend_bucket.backend_bucket.id path_rule { paths = [\u0026#34;/test/*\u0026#34;] service = google_compute_backend_bucket.backend_bucket.id } } } 上記のコードで構築した、GCLBの設定は以下のようになっています。\nそして、対象のバックエンドバケットには以下のようにオブジェクトが配置されています。\ntraining-394392-gclb-cdn-gcs ├── hengao_mabuta_uragaesu.png └── test └── buranko_boy_smile.png では、環境構築できたのでGCLB経由してオブジェクトを参照してみます。\nNGなURLでは、NoSuchKeyとエラーになり、OKなURLではブラウザなどで画像参照ができます。\nそれぞれNGとOKな理由は恐らく以下の通りだと思います。（あくまでも、個人の見解なので理由は違うかもしれないです）\nNGなURL http://34.36.243.201/test/hengao_mabuta_uragaesu.png test以下に対象のファイル名はないためエラーになる http://34.36.243.201/test/test/buranko_boy_smile.png test/testという階層がバケットには作られていないためエラーになる OKなURL http://34.36.243.201/test/buranko_boy_smile.png test階層の下に対象のファイル名が存在するため画像参照できる ちなみになんか画像参照できないなってときはAuditLogを有効にすると、CloudLoggingにGCSの操作ログが流れてくるので、storage.objects.getしているログを見つけて、参照pathを確認するとデバッグが捗るようになると思います！\n補足 GoogleCloudのガイドを見ると、この点の詳細に触れずにpathを一致させるように構築していました。\n特に理由について触れているところが見当たらなかったので、普通に別名で構築して、NoSuchKey. を踏んでしまいました。\n↓が参考にした公式の構築例です。\ncopy-file createanwith_backend_buckets 最後に たぶん、公式の何処かに明記されているか、ロードバランサー使うときの常識なのかもしれないけど、そこらへん無知だからはまってしまいました\u0026hellip;\n","permalink":"//localhost:1313/posts/2023-11-12/","summary":"\u003cp\u003eGoogleCloudLoadBalancing（以下、GCLB）のurl-mapを指定して、バックエンドバケットにルーティングするときに地味にハマったエラーとその解消法について書きます。\u003c/p\u003e\n\u003ch3 id=\"環境\"\u003e環境\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eGoogleCloud\n\n# terraformで構築するため一応バージョンのせておく\nterraform --version\n  v1.3.5\nhashicorp/google\n  v4.74.0\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"結論\"\u003e結論\u003c/h3\u003e\n\u003cp\u003eGCLBを経由してGCSのオブジェクト参照するときは、オブジェクトのpathとurl-mapで指定するpathは一致させる必要があります。\u003c/p\u003e\n\u003ch3 id=\"解説\"\u003e解説\u003c/h3\u003e\n\u003cp\u003e今回使用するterraformのコードの一部です。他にもgcsなどのリソースも作ってますが、解説する内容とは関係ないので省略してます。\u003c/p\u003e\n\u003cp\u003eデフォルトのルートとは別に\u003ccode\u003epaths = [\u0026quot;/test/*\u0026quot;]\u003c/code\u003eでバックエンドバケットにルーティングするように設定されています。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eresource \u0026#34;google_compute_url_map\u0026#34; \u0026#34;default\u0026#34; {\n  name = \u0026#34;${local.project}-${local.prefix}\u0026#34;\n\n  default_service = google_compute_backend_bucket.backend_bucket.id\n\n  host_rule {\n    hosts        = [\u0026#34;*\u0026#34;]\n    path_matcher = \u0026#34;path-matcher-2\u0026#34;\n  }\n  path_matcher {\n    name            = \u0026#34;path-matcher-2\u0026#34;\n    default_service = google_compute_backend_bucket.backend_bucket.id\n\n    path_rule {\n      paths   = [\u0026#34;/test/*\u0026#34;]\n      service = google_compute_backend_bucket.backend_bucket.id\n    }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e上記のコードで構築した、GCLBの設定は以下のようになっています。\u003c/p\u003e\n\u003cp\u003eそして、対象のバックエンドバケットには以下のようにオブジェクトが配置されています。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etraining-394392-gclb-cdn-gcs\n├── hengao_mabuta_uragaesu.png\n└── test\n      └── buranko_boy_smile.png\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eでは、環境構築できたのでGCLB経由してオブジェクトを参照してみます。\u003c/p\u003e\n\u003cp\u003eNGなURLでは、NoSuchKeyとエラーになり、OKなURLではブラウザなどで画像参照ができます。\u003c/p\u003e\n\u003cp\u003eそれぞれNGとOKな理由は恐らく以下の通りだと思います。（あくまでも、個人の見解なので理由は違うかもしれないです）\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eNGなURL\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ehttp://34.36.243.201/test/hengao_mabuta_uragaesu.png\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003etest以下に対象のファイル名はないためエラーになる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehttp://34.36.243.201/test/test/buranko_boy_smile.png\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003etest/testという階層がバケットには作られていないためエラーになる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eOKなURL\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ehttp://34.36.243.201/test/buranko_boy_smile.png\u003c/code\u003e\n\u003cul\u003e\n\u003cli\u003etest階層の下に対象のファイル名が存在するため画像参照できる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eちなみになんか画像参照できないなってときはAuditLogを有効にすると、CloudLoggingにGCSの操作ログが流れてくるので、\u003ccode\u003estorage.objects.get\u003c/code\u003eしているログを見つけて、参照pathを確認するとデバッグが捗るようになると思います！\u003c/p\u003e","title":"CloudLoadBalancingでバックエンドバケットにルーティングするときはpathとバケット内の階層を一致させよう"}]